# compose.yml - Services séparés (sans Pandemetrix_ML)
services:
  api:
    build: .
    container_name: pandemetrix_api
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      - POSTGRES_RAW_HOST=postgresql_raw
      - POSTGRES_RAW_DB=raw_db
      - POSTGRES_RAW_USER=raw_user
      - POSTGRES_RAW_PASSWORD=raw_password
      - POSTGRES_API_HOST=postgresql_api
      - POSTGRES_API_DB=api_db
      - POSTGRES_API_USER=api_user
      - POSTGRES_API_PASSWORD=api_password
      # Configuration Pandemetrix_ML externe (host.docker.internal pour accès depuis container)
      - PANDEMETRIX_ML_URL=http://host.docker.internal:5001/api/v1/covid
      - PANDEMETRIX_ML_TIMEOUT=30
    volumes:
      - ./:/api
    depends_on:
      - postgresql_raw
      - postgresql_api

  postgresql_raw:
      image: postgres:latest
      container_name: postgresql_raw
      restart: unless-stopped
      ports:
        - '5433:5432'
      environment:
        - POSTGRES_USER=raw_user
        - POSTGRES_PASSWORD=raw_password
        - POSTGRES_DB=raw_db
      volumes:
        - postgresql-raw-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U raw_user"]
        interval: 10s
        timeout: 5s
        retries: 5

  postgresql_api:
      image: postgres:latest
      container_name: postgresql_api
      restart: unless-stopped
      ports:
        - '5432:5432'
      environment:
        - POSTGRES_USER=api_user
        - POSTGRES_PASSWORD=api_password
        - POSTGRES_DB=api_db
      volumes:
        - postgresql-api-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U api_user"]
        interval: 10s
        timeout: 5s
        retries: 5

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: unless-stopped
    ports:
      - '3030:3000'
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase_db
      - MB_DB_PORT=5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=metabase_password
      - MB_DB_HOST=postgresql_metabase
      - JAVA_TIMEZONE=Europe/Paris
    depends_on:
      - postgresql_metabase

  postgresql_metabase:
    image: postgres:latest
    container_name: postgresql_metabase
    restart: unless-stopped
    ports:
      - '5431:5432'
    environment:
      - POSTGRES_USER=metabase
      - POSTGRES_PASSWORD=metabase_password
      - POSTGRES_DB=metabase_db
    volumes:
      - postgresql-metabase-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  ia:
    build: ../Pandemetrix_ML
    container_name: pandemetrix_ia
    restart: unless-stopped
    ports:
      - "5001:5000"
    volumes:
      - ../Pandemetrix_ML:/app
    depends_on:
      - mongodb

  etl:
    build: ../etl
    container_name: pandemetrix_etl
    restart: unless-stopped
    ports:
      - "5002:5000"
    volumes:
      - ../Pandemetrix_ML:/api
    depends_on:
      - mongodb
  
  mongodb:
    image: mongodb/mongodb-community-server:7.0.17-ubuntu2204
    container_name: pandemetrix_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - pandemetrix_mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo_user
      - MONGO_INITDB_ROOT_PASSWORD=mongo_password
      - MONGO_INITDB_DATABASE=api_db

volumes:
  postgresql-metabase-data:
  postgresql-api-data:
  postgresql-raw-data:
  pandemetrix_mongodb_data: