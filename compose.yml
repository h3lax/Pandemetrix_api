services:
  api:
    build: .
    container_name: pandemetrix_api
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      - POSTGRES_RAW_HOST=postgresql_raw
      - POSTGRES_RAW_DB=raw_db
      - POSTGRES_RAW_USER=raw_user
      - POSTGRES_RAW_PASSWORD=raw_password
      - POSTGRES_API_HOST=postgresql_api
      - POSTGRES_API_DB=api_db
      - POSTGRES_API_USER=api_user
      - POSTGRES_API_PASSWORD=api_password
    volumes:
      - ./:/api # responsive to changes in the api directory
    depends_on:
      - postgresql_raw
      - postgresql_api
  postgresql_raw:
      image: postgres:latest
      container_name: postgresql_raw
      restart: unless-stopped
      ports:
        - '5433:5432'
      environment:
        - POSTGRES_USER=raw_user
        - POSTGRES_PASSWORD=raw_password
        - POSTGRES_DB=raw_db
      volumes:
        - postgresql-raw-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U raw_user"]
        interval: 10s
        timeout: 5s
        retries: 5
  postgresql_api:
      image: postgres:latest
      container_name: postgresql_api
      restart: unless-stopped
      ports:
        - '5432:5432'
      environment:
        - POSTGRES_USER=api_user
        - POSTGRES_PASSWORD=api_password
        - POSTGRES_DB=api_db
      volumes:
        - postgresql-api-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U api_user"]
        interval: 10s
        timeout: 5s
        retries: 5

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: unless-stopped
    ports:
      - '3030:3000'
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase_db
      - MB_DB_PORT=5432  # Changé de 5434 à 5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=metabase_password
      - MB_DB_HOST=postgresql_metabase  # Utilise le nom du service docker
      - JAVA_TIMEZONE=Europe/Paris
    depends_on:
      - postgresql_metabase

  postgresql_metabase:
    image: postgres:latest
    container_name: postgresql_metabase
    restart: unless-stopped
    ports:
      - '5431:5432'  # Port externe 5434, interne toujours 5432
    environment:
      - POSTGRES_USER=metabase
      - POSTGRES_PASSWORD=metabase_password
      - POSTGRES_DB=metabase_db
    volumes:
      - postgresql-metabase-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgresql-metabase-data:
  postgresql-api-data:
  postgresql-raw-data:

#TODO: Ajouter les services Flask + variables d'environnement